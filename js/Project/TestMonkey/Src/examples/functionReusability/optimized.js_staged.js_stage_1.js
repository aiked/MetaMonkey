 {
    function genMultiParameterOptimizer(argumentsLength) {
    var optimizedAst = {loc:{start:{line:23, column:23}, end:{line:31, column:9}, source:null}, type:"Program", body:[{loc:{start:{line:25, column:7}, end:{line:31, column:9}, source:null}, type:"ExpressionStatement", expression:{loc:{start:{line:25, column:7}, end:{line:31, column:7}, source:null}, type:"FunctionExpression", id:null, params:[{loc:{start:{line:25, column:16}, end:{line:25, column:21}, source:null}, type:"Identifier", name:"event"},{loc:{start:{line:25, column:23}, end:{line:25, column:27}, source:null}, type:"Identifier", name:"args"}], defaults:[], body:{loc:{start:{line:25, column:29}, end:{line:30, column:9}, source:null}, type:"BlockStatement", body:[{loc:{start:{line:26, column:8}, end:{line:26, column:17}, source:null}, type:"VariableDeclaration", kind:"var", declarations:[{loc:{start:{line:26, column:12}, end:{line:26, column:14}, source:null}, type:"VariableDeclarator", id:{loc:{start:{line:26, column:12}, end:{line:26, column:14}, source:null}, type:"Identifier", name:"ev"}, init:null},{loc:{start:{line:26, column:16}, end:{line:26, column:22}, source:null}, type:"VariableDeclarator", id:{loc:{start:{line:26, column:16}, end:{line:26, column:22}, source:null}, type:"Identifier", name:"i"}, init:{loc:{start:{line:26, column:20}, end:{line:26, column:22}, source:null}, type:"UnaryExpression", operator:"-", argument:{loc:{start:{line:26, column:21}, end:{line:26, column:22}, source:null}, type:"Literal", value:1}, prefix:true}}]},{loc:{start:{line:27, column:8}, end:{line:30, column:9}, source:null}, type:"SwitchStatement", discriminant:{loc:{start:{line:27, column:16}, end:{line:27, column:27}, source:null}, type:"MemberExpression", object:{loc:{start:{line:27, column:16}, end:{line:27, column:20}, source:null}, type:"Identifier", name:"args"}, property:{loc:null, type:"Identifier", name:"length"}, computed:false}, cases:[{loc:{start:{line:28, column:10}, end:{line:28, column:54}, source:null}, type:"SwitchCase", test:{loc:{start:{line:28, column:15}, end:{line:28, column:16}, source:null}, type:"Literal", value:0}, consequent:[{loc:{start:{line:28, column:18}, end:{line:28, column:46}, source:null}, type:"ExpressionStatement", expression:{loc:{start:{line:28, column:18}, end:{line:28, column:44}, source:null}, type:"CallExpression", callee:{loc:{start:{line:28, column:18}, end:{line:28, column:37}, source:null}, type:"MemberExpression", object:{loc:{start:{line:28, column:18}, end:{line:28, column:32}, source:null}, type:"MemberExpression", object:{loc:{start:{line:28, column:18}, end:{line:28, column:23}, source:null}, type:"Identifier", name:"event"}, property:{loc:null, type:"Identifier", name:"callback"}, computed:false}, property:{loc:null, type:"Identifier", name:"call"}, computed:false}, arguments:[{loc:{start:{line:28, column:38}, end:{line:28, column:44}, source:null}, type:"MemberExpression", object:{loc:{start:{line:28, column:38}, end:{line:28, column:40}, source:null}, type:"Identifier", name:"ev"}, property:{loc:null, type:"Identifier", name:"ctx"}, computed:false}]}},{loc:{start:{line:28, column:47}, end:{line:28, column:54}, source:null}, type:"ReturnStatement", argument:null}]},{loc:{start:{line:29, column:10}, end:{line:29, column:62}, source:null}, type:"SwitchCase", test:null, consequent:[{loc:{start:{line:29, column:19}, end:{line:29, column:54}, source:null}, type:"ExpressionStatement", expression:{loc:{start:{line:29, column:19}, end:{line:29, column:52}, source:null}, type:"CallExpression", callee:{loc:{start:{line:29, column:19}, end:{line:29, column:39}, source:null}, type:"MemberExpression", object:{loc:{start:{line:29, column:19}, end:{line:29, column:33}, source:null}, type:"MemberExpression", object:{loc:{start:{line:29, column:19}, end:{line:29, column:24}, source:null}, type:"Identifier", name:"event"}, property:{loc:null, type:"Identifier", name:"callback"}, computed:false}, property:{loc:null, type:"Identifier", name:"apply"}, computed:false}, arguments:[{loc:{start:{line:29, column:40}, end:{line:29, column:46}, source:null}, type:"MemberExpression", object:{loc:{start:{line:29, column:40}, end:{line:29, column:42}, source:null}, type:"Identifier", name:"ev"}, property:{loc:null, type:"Identifier", name:"ctx"}, computed:false},{loc:{start:{line:29, column:48}, end:{line:29, column:52}, source:null}, type:"Identifier", name:"args"}]}},{loc:{start:{line:29, column:55}, end:{line:29, column:62}, source:null}, type:"ReturnStatement", argument:null}]}], lexical:false}]}, rest:null, generator:false, expression:false}}]};
    var switchAst = optimizedAst.body[0].expression.body.body[1];
for (var i = 0; i < argumentsLength; ++i) {
    var newoptimizedFuncall = JSON.parse(JSON.stringify(switchAst.cases[i]));
    var argumentsAst = newoptimizedFuncall.consequent[0].expression.arguments;
    newoptimizedFuncall.test.value = i + 1;
    var argAst = {loc:{start:{line:42, column:20}, end:{line:42, column:33}, source:null}, type:"Program", body:[{loc:{start:{line:42, column:23}, end:{line:42, column:33}, source:null}, type:"ExpressionStatement", expression:{loc:{start:{line:42, column:23}, end:{line:42, column:32}, source:null}, type:"MemberExpression", object:{loc:{start:{line:42, column:23}, end:{line:42, column:27}, source:null}, type:"Identifier", name:"args"}, property:meta_escapejsvalue( i), computed:true}}]}.body[0].expression;
    argumentsAst.push(argAst);
    switchAst.cases.splice(i + 1, 0, newoptimizedFuncall);
    }
    return optimizedAst;
    }

}
inline( genMultiParameterOptimizer(10) );