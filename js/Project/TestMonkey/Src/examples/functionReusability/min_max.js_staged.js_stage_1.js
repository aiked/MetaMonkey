 {
    function genCompare(sign) {
    var arrayCompAst;
    var objCompAst;
    var infCompAst;
    if (sign) {
    arrayCompAst = {loc:{start:{line:63, column:21}, end:{line:63, column:39}, source:null}, type:"Program", body:[{loc:{start:{line:63, column:24}, end:{line:63, column:39}, source:null}, type:"ExpressionStatement", expression:{loc:{start:{line:63, column:24}, end:{line:63, column:38}, source:null}, type:"BinaryExpression", operator:"<", left:{loc:{start:{line:63, column:24}, end:{line:63, column:29}, source:null}, type:"Identifier", name:"value"}, right:{loc:{start:{line:63, column:32}, end:{line:63, column:38}, source:null}, type:"Identifier", name:"result"}}}]};
    objCompAst = {loc:{start:{line:64, column:19}, end:{line:64, column:46}, source:null}, type:"Program", body:[{loc:{start:{line:64, column:22}, end:{line:64, column:46}, source:null}, type:"ExpressionStatement", expression:{loc:{start:{line:64, column:22}, end:{line:64, column:45}, source:null}, type:"BinaryExpression", operator:"<", left:{loc:{start:{line:64, column:22}, end:{line:64, column:30}, source:null}, type:"Identifier", name:"computed"}, right:{loc:{start:{line:64, column:33}, end:{line:64, column:45}, source:null}, type:"Identifier", name:"lastComputed"}}}]};
    infCompAst = {loc:{start:{line:65, column:19}, end:{line:65, column:31}, source:null}, type:"Program", body:[{loc:{start:{line:65, column:22}, end:{line:65, column:31}, source:null}, type:"ExpressionStatement", expression:{loc:{start:{line:65, column:22}, end:{line:65, column:30}, source:null}, type:"Identifier", name:"Infinity"}}]};
    } else {
    arrayCompAst = {loc:{start:{line:67, column:21}, end:{line:67, column:39}, source:null}, type:"Program", body:[{loc:{start:{line:67, column:24}, end:{line:67, column:39}, source:null}, type:"ExpressionStatement", expression:{loc:{start:{line:67, column:24}, end:{line:67, column:38}, source:null}, type:"BinaryExpression", operator:">", left:{loc:{start:{line:67, column:24}, end:{line:67, column:29}, source:null}, type:"Identifier", name:"value"}, right:{loc:{start:{line:67, column:32}, end:{line:67, column:38}, source:null}, type:"Identifier", name:"result"}}}]};
    objCompAst = {loc:{start:{line:68, column:19}, end:{line:68, column:46}, source:null}, type:"Program", body:[{loc:{start:{line:68, column:22}, end:{line:68, column:46}, source:null}, type:"ExpressionStatement", expression:{loc:{start:{line:68, column:22}, end:{line:68, column:45}, source:null}, type:"BinaryExpression", operator:">", left:{loc:{start:{line:68, column:22}, end:{line:68, column:30}, source:null}, type:"Identifier", name:"computed"}, right:{loc:{start:{line:68, column:33}, end:{line:68, column:45}, source:null}, type:"Identifier", name:"lastComputed"}}}]};
    infCompAst = {loc:{start:{line:69, column:19}, end:{line:69, column:32}, source:null}, type:"Program", body:[{loc:{start:{line:69, column:22}, end:{line:69, column:32}, source:null}, type:"ExpressionStatement", expression:{loc:{start:{line:69, column:22}, end:{line:69, column:31}, source:null}, type:"UnaryExpression", operator:"-", argument:{loc:{start:{line:69, column:23}, end:{line:69, column:31}, source:null}, type:"Identifier", name:"Infinity"}, prefix:true}}]};
    }
    return {loc:{start:{line:72, column:11}, end:{line:96, column:9}, source:null}, type:"Program", body:[{loc:{start:{line:74, column:7}, end:{line:96, column:9}, source:null}, type:"ExpressionStatement", expression:{loc:{start:{line:74, column:7}, end:{line:96, column:7}, source:null}, type:"FunctionExpression", id:null, params:[{loc:{start:{line:74, column:16}, end:{line:74, column:19}, source:null}, type:"Identifier", name:"obj"},{loc:{start:{line:74, column:21}, end:{line:74, column:29}, source:null}, type:"Identifier", name:"iteratee"},{loc:{start:{line:74, column:31}, end:{line:74, column:38}, source:null}, type:"Identifier", name:"context"}], defaults:[], body:{loc:{start:{line:74, column:40}, end:{line:95, column:22}, source:null}, type:"BlockStatement", body:[{loc:{start:{line:75, column:8}, end:{line:76, column:27}, source:null}, type:"VariableDeclaration", kind:"var", declarations:[{loc:{start:{line:75, column:12}, end:{line:75, column:29}, source:null}, type:"VariableDeclarator", id:{loc:{start:{line:75, column:12}, end:{line:75, column:29}, source:null}, type:"Identifier", name:"result"}, init:{loc:{start:{line:75, column:21}, end:{line:75, column:29}, source:null}, type:"Identifier", name:"Infinity"}},{loc:{start:{line:75, column:31}, end:{line:75, column:54}, source:null}, type:"VariableDeclarator", id:{loc:{start:{line:75, column:31}, end:{line:75, column:54}, source:null}, type:"Identifier", name:"lastComputed"}, init:{loc:{start:{line:75, column:46}, end:{line:75, column:54}, source:null}, type:"Identifier", name:"Infinity"}},{loc:{start:{line:76, column:12}, end:{line:76, column:17}, source:null}, type:"VariableDeclarator", id:{loc:{start:{line:76, column:12}, end:{line:76, column:17}, source:null}, type:"Identifier", name:"value"}, init:null},{loc:{start:{line:76, column:19}, end:{line:76, column:27}, source:null}, type:"VariableDeclarator", id:{loc:{start:{line:76, column:19}, end:{line:76, column:27}, source:null}, type:"Identifier", name:"computed"}, init:null}]},{loc:{start:{line:77, column:8}, end:{line:93, column:13}, source:null}, type:"IfStatement", test:{loc:{start:{line:77, column:12}, end:{line:77, column:43}, source:null}, type:"LogicalExpression", operator:"&&", left:{loc:{start:{line:77, column:12}, end:{line:77, column:28}, source:null}, type:"BinaryExpression", operator:"==", left:{loc:{start:{line:77, column:12}, end:{line:77, column:20}, source:null}, type:"Identifier", name:"iteratee"}, right:{loc:{start:{line:77, column:24}, end:{line:77, column:28}, source:null}, type:"Literal", value:null}}, right:{loc:{start:{line:77, column:32}, end:{line:77, column:43}, source:null}, type:"BinaryExpression", operator:"!=", left:{loc:{start:{line:77, column:32}, end:{line:77, column:35}, source:null}, type:"Identifier", name:"obj"}, right:{loc:{start:{line:77, column:39}, end:{line:77, column:43}, source:null}, type:"Literal", value:null}}}, consequent:{loc:{start:{line:77, column:45}, end:{line:82, column:29}, source:null}, type:"BlockStatement", body:[{loc:{start:{line:78, column:10}, end:{line:78, column:65}, source:null}, type:"ExpressionStatement", expression:{loc:{start:{line:78, column:10}, end:{line:78, column:63}, source:null}, type:"AssignmentExpression", operator:"=", left:{loc:{start:{line:78, column:10}, end:{line:78, column:13}, source:null}, type:"Identifier", name:"obj"}, right:{loc:{start:{line:78, column:16}, end:{line:78, column:63}, source:null}, type:"ConditionalExpression", test:{loc:{start:{line:78, column:16}, end:{line:78, column:42}, source:null}, type:"BinaryExpression", operator:"===", left:{loc:{start:{line:78, column:16}, end:{line:78, column:26}, source:null}, type:"MemberExpression", object:{loc:{start:{line:78, column:16}, end:{line:78, column:19}, source:null}, type:"Identifier", name:"obj"}, property:{loc:null, type:"Identifier", name:"length"}, computed:false}, right:{loc:{start:{line:78, column:31}, end:{line:78, column:42}, source:null}, type:"UnaryExpression", operator:"+", argument:{loc:{start:{line:78, column:32}, end:{line:78, column:42}, source:null}, type:"MemberExpression", object:{loc:{start:{line:78, column:32}, end:{line:78, column:35}, source:null}, type:"Identifier", name:"obj"}, property:{loc:null, type:"Identifier", name:"length"}, computed:false}, prefix:true}}, consequent:{loc:{start:{line:78, column:45}, end:{line:78, column:48}, source:null}, type:"Identifier", name:"obj"}, alternate:{loc:{start:{line:78, column:51}, end:{line:78, column:63}, source:null}, type:"CallExpression", callee:{loc:{start:{line:78, column:51}, end:{line:78, column:59}, source:null}, type:"MemberExpression", object:{loc:{start:{line:78, column:51}, end:{line:78, column:52}, source:null}, type:"Identifier", name:"_"}, property:{loc:null, type:"Identifier", name:"values"}, computed:false}, arguments:[{loc:{start:{line:78, column:60}, end:{line:78, column:63}, source:null}, type:"Identifier", name:"obj"}]}}}},{loc:{start:{line:79, column:10}, end:{line:82, column:29}, source:null}, type:"ForStatement", init:{loc:{start:{line:79, column:15}, end:{line:79, column:32}, source:null}, type:"VariableDeclaration", kind:"var", declarations:[{loc:{start:{line:79, column:19}, end:{line:79, column:24}, source:null}, type:"VariableDeclarator", id:{loc:{start:{line:79, column:19}, end:{line:79, column:24}, source:null}, type:"Identifier", name:"i"}, init:{loc:{start:{line:79, column:23}, end:{line:79, column:24}, source:null}, type:"Literal", value:0}},{loc:{start:{line:79, column:26}, end:{line:79, column:45}, source:null}, type:"VariableDeclarator", id:{loc:{start:{line:79, column:26}, end:{line:79, column:45}, source:null}, type:"Identifier", name:"length"}, init:{loc:{start:{line:79, column:35}, end:{line:79, column:45}, source:null}, type:"MemberExpression", object:{loc:{start:{line:79, column:35}, end:{line:79, column:38}, source:null}, type:"Identifier", name:"obj"}, property:{loc:null, type:"Identifier", name:"length"}, computed:false}}]}, test:{loc:{start:{line:79, column:47}, end:{line:79, column:57}, source:null}, type:"BinaryExpression", operator:"<", left:{loc:{start:{line:79, column:47}, end:{line:79, column:48}, source:null}, type:"Identifier", name:"i"}, right:{loc:{start:{line:79, column:51}, end:{line:79, column:57}, source:null}, type:"Identifier", name:"length"}}, update:{loc:{start:{line:79, column:59}, end:{line:79, column:60}, source:null}, type:"UpdateExpression", operator:"++", argument:{loc:{start:{line:79, column:59}, end:{line:79, column:60}, source:null}, type:"Identifier", name:"i"}, prefix:false}, body:{loc:{start:{line:79, column:64}, end:{line:82, column:29}, source:null}, type:"BlockStatement", body:[{loc:{start:{line:80, column:12}, end:{line:80, column:27}, source:null}, type:"ExpressionStatement", expression:{loc:{start:{line:80, column:12}, end:{line:80, column:26}, source:null}, type:"AssignmentExpression", operator:"=", left:{loc:{start:{line:80, column:12}, end:{line:80, column:17}, source:null}, type:"Identifier", name:"value"}, right:{loc:{start:{line:80, column:20}, end:{line:80, column:26}, source:null}, type:"MemberExpression", object:{loc:{start:{line:80, column:20}, end:{line:80, column:23}, source:null}, type:"Identifier", name:"obj"}, property:{loc:{start:{line:80, column:24}, end:{line:80, column:25}, source:null}, type:"Identifier", name:"i"}, computed:true}}},{loc:{start:{line:81, column:12}, end:{line:82, column:29}, source:null}, type:"IfStatement", test:meta_escape( false,arrayCompAst,false), consequent:{loc:{start:{line:81, column:32}, end:{line:82, column:29}, source:null}, type:"BlockStatement", body:[{loc:{start:{line:82, column:14}, end:{line:82, column:29}, source:null}, type:"ExpressionStatement", expression:{loc:{start:{line:82, column:14}, end:{line:82, column:28}, source:null}, type:"AssignmentExpression", operator:"=", left:{loc:{start:{line:82, column:14}, end:{line:82, column:20}, source:null}, type:"Identifier", name:"result"}, right:{loc:{start:{line:82, column:23}, end:{line:82, column:28}, source:null}, type:"Identifier", name:"value"}}}]}, alternate:null}]}}]}, alternate:{loc:{start:{line:85, column:15}, end:{line:93, column:13}, source:null}, type:"BlockStatement", body:[{loc:{start:{line:86, column:10}, end:{line:86, column:51}, source:null}, type:"ExpressionStatement", expression:{loc:{start:{line:86, column:10}, end:{line:86, column:49}, source:null}, type:"AssignmentExpression", operator:"=", left:{loc:{start:{line:86, column:10}, end:{line:86, column:18}, source:null}, type:"Identifier", name:"iteratee"}, right:{loc:{start:{line:86, column:21}, end:{line:86, column:49}, source:null}, type:"CallExpression", callee:{loc:{start:{line:86, column:21}, end:{line:86, column:31}, source:null}, type:"MemberExpression", object:{loc:{start:{line:86, column:21}, end:{line:86, column:22}, source:null}, type:"Identifier", name:"_"}, property:{loc:null, type:"Identifier", name:"iteratee"}, computed:false}, arguments:[{loc:{start:{line:86, column:32}, end:{line:86, column:40}, source:null}, type:"Identifier", name:"iteratee"},{loc:{start:{line:86, column:42}, end:{line:86, column:49}, source:null}, type:"Identifier", name:"context"}]}}},{loc:{start:{line:87, column:10}, end:{line:93, column:13}, source:null}, type:"ExpressionStatement", expression:{loc:{start:{line:87, column:10}, end:{line:93, column:11}, source:null}, type:"CallExpression", callee:{loc:{start:{line:87, column:10}, end:{line:87, column:16}, source:null}, type:"MemberExpression", object:{loc:{start:{line:87, column:10}, end:{line:87, column:11}, source:null}, type:"Identifier", name:"_"}, property:{loc:null, type:"Identifier", name:"each"}, computed:false}, arguments:[{loc:{start:{line:87, column:17}, end:{line:87, column:20}, source:null}, type:"Identifier", name:"obj"},{loc:{start:{line:87, column:22}, end:{line:93, column:11}, source:null}, type:"FunctionExpression", id:null, params:[{loc:{start:{line:87, column:31}, end:{line:87, column:36}, source:null}, type:"Identifier", name:"value"},{loc:{start:{line:87, column:38}, end:{line:87, column:43}, source:null}, type:"Identifier", name:"index"},{loc:{start:{line:87, column:45}, end:{line:87, column:49}, source:null}, type:"Identifier", name:"list"}], defaults:[], body:{loc:{start:{line:87, column:51}, end:{line:91, column:38}, source:null}, type:"BlockStatement", body:[{loc:{start:{line:88, column:12}, end:{line:88, column:52}, source:null}, type:"ExpressionStatement", expression:{loc:{start:{line:88, column:12}, end:{line:88, column:50}, source:null}, type:"AssignmentExpression", operator:"=", left:{loc:{start:{line:88, column:12}, end:{line:88, column:20}, source:null}, type:"Identifier", name:"computed"}, right:{loc:{start:{line:88, column:23}, end:{line:88, column:50}, source:null}, type:"CallExpression", callee:{loc:{start:{line:88, column:23}, end:{line:88, column:31}, source:null}, type:"Identifier", name:"iteratee"}, arguments:[{loc:{start:{line:88, column:32}, end:{line:88, column:37}, source:null}, type:"Identifier", name:"value"},{loc:{start:{line:88, column:39}, end:{line:88, column:44}, source:null}, type:"Identifier", name:"index"},{loc:{start:{line:88, column:46}, end:{line:88, column:50}, source:null}, type:"Identifier", name:"list"}]}}},{loc:{start:{line:89, column:12}, end:{line:91, column:38}, source:null}, type:"IfStatement", test:{loc:{start:{line:89, column:16}, end:{line:89, column:84}, source:null}, type:"LogicalExpression", operator:"||", left:meta_escape( false,objCompAst,false), right:{loc:{start:{line:89, column:32}, end:{line:89, column:84}, source:null}, type:"LogicalExpression", operator:"&&", left:{loc:{start:{line:89, column:32}, end:{line:89, column:57}, source:null}, type:"BinaryExpression", operator:"===", left:{loc:{start:{line:89, column:32}, end:{line:89, column:40}, source:null}, type:"Identifier", name:"computed"}, right:meta_escape( false,infCompAst,false)}, right:{loc:{start:{line:89, column:61}, end:{line:89, column:84}, source:null}, type:"BinaryExpression", operator:"===", left:{loc:{start:{line:89, column:61}, end:{line:89, column:67}, source:null}, type:"Identifier", name:"result"}, right:meta_escape( false,infCompAst,false)}}}, consequent:{loc:{start:{line:89, column:86}, end:{line:91, column:38}, source:null}, type:"BlockStatement", body:[{loc:{start:{line:90, column:14}, end:{line:90, column:29}, source:null}, type:"ExpressionStatement", expression:{loc:{start:{line:90, column:14}, end:{line:90, column:28}, source:null}, type:"AssignmentExpression", operator:"=", left:{loc:{start:{line:90, column:14}, end:{line:90, column:20}, source:null}, type:"Identifier", name:"result"}, right:{loc:{start:{line:90, column:23}, end:{line:90, column:28}, source:null}, type:"Identifier", name:"value"}}},{loc:{start:{line:91, column:14}, end:{line:91, column:38}, source:null}, type:"ExpressionStatement", expression:{loc:{start:{line:91, column:14}, end:{line:91, column:37}, source:null}, type:"AssignmentExpression", operator:"=", left:{loc:{start:{line:91, column:14}, end:{line:91, column:26}, source:null}, type:"Identifier", name:"lastComputed"}, right:{loc:{start:{line:91, column:29}, end:{line:91, column:37}, source:null}, type:"Identifier", name:"computed"}}}]}, alternate:null}]}, rest:null, generator:false, expression:false}]}}]}},{loc:{start:{line:95, column:8}, end:{line:95, column:22}, source:null}, type:"ReturnStatement", argument:{loc:{start:{line:95, column:15}, end:{line:95, column:21}, source:null}, type:"Identifier", name:"result"}}]}, rest:null, generator:false, expression:false}}]};
    }

}
inline( genCompare(true) );inline( genCompare(false) );