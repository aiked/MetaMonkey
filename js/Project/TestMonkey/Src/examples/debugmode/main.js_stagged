
===================RUNNING========================
function getBuildMode() {
    return "release";
}

function assert(cond, msg) {
    var buildMode = getBuildMode();
    if (buildMode === "debug") {
    return {loc:null, type:"Program", body:[{loc:null, type:"ExpressionStatement", expression:{loc:null, type:"CallExpression", callee:{loc:null, type:"MemberExpression", object:{loc:null, type:"Identifier", name:"console"}, property:{loc:null, type:"Identifier", name:"assert"}, computed:false}, arguments:meta_escape( true,[],[{index:0,expr:cond},{index:1,expr:msg}],false)}}]};
    } else {
    return {loc:null, type:"Program", body:[{loc:null, type:"IfStatement", test:meta_escape( false,cond,false), consequent:{loc:null, type:"BlockStatement", body:[{loc:null, type:"ExpressionStatement", expression:{loc:null, type:"CallExpression", callee:{loc:null, type:"Identifier", name:"alert"}, arguments:[{loc:null, type:"BinaryExpression", operator:"+", left:{loc:null, type:"BinaryExpression", operator:"+", left:{loc:null, type:"Literal", value:"oops!, an error occurred!, "}, right:meta_escape( false,msg,false)}, right:{loc:null, type:"Literal", value:", pleaze contact us."}}]}}]}, alternate:null},{loc:null, type:"EmptyStatement"}]};
    }
}

inline( assert({loc:null, type:"Program", body:[{loc:null, type:"ExpressionStatement", expression:{loc:null, type:"Identifier", name:"fun"}}]}, {loc:null, type:"Program", body:[{loc:null, type:"ExpressionStatement", expression:{loc:null, type:"BinaryExpression", operator:"+", left:{loc:null, type:"BinaryExpression", operator:"+", left:{loc:null, type:"Literal", value:"cannot find ("}, right:{loc:null, type:"Identifier", name:"funcName"}}, right:{loc:null, type:"Literal", value:") method"}}}]}) );
===================RESULT==========================
if (fun) {
    alert("oops!, an error occurred!, " + ("cannot find (" + funcName + ") method") + ", pleaze contact us.");
}
;

==================================================
