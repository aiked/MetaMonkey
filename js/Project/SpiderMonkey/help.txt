JSObject *propertiesObj;
if( !getObjPropertyAndConvertToObj(val, "properties", &propertiesObj) )
	return JS_FALSE;

JSString *kindStr;
if( !getObjPropertyAndConvertToString(propObj, "kind", &kindStr) )
	return JS_FALSE;

JSString *kindStr;
if( !unparse_expr(keyObj, &initKeyStr, indent, 18, false) )
	return JS_FALSE;

JSString *functionStr;
if( !functionDeclaration(kindStr, &functionStr, keyVal, valueObj, indent ) )
	return JS_FALSE;

jsval idVal;
if (!JS_GetProperty(cx, val, "id", &idVal)){
	JS_ReportError(cx, "object has not property (expression)");
	return JS_FALSE;
}

JSString *declStr;
if( !declarators( declObj, &declStr, indent, false) )
	return JS_FALSE;

JSString *ifSubStmtStr;
if(!substmt(consequentObj, &ifSubStmtStr, indent, gotElse))
	return JS_FALSE;

*child = joinStringVector(&children, NULL, NULL, NULL);

if( !wrapExpr(child, cprec, 3) )
		return JS_FALSE;

JS_NewStringCopyZ(cx,"init");

Vector<JSString*> children(cx);

*child = joinString(4, srcStr(JSSRCNAME_HASH), indexStr, 
						srcStr(JSSRCNAME_ASSIGN), expressionStr );


